"use strict";(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[7037],{7172:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>o});var s=i(4848),t=i(8453);const r={title:"Timers",sidebar_position:3},d="Timers",a={id:"developer-resources/timers",title:"Timers",description:"The timer functionality is designed to handle timers, alarms, reminders and scheduled commands, managed via voice.",source:"@site/docs/developer-resources/timers.md",sourceDirName:"developer-resources",slug:"/developer-resources/timers",permalink:"/View-Assist/docs/developer-resources/timers",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Timers",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Custom Elements",permalink:"/View-Assist/docs/developer-resources/custom-elements"},next:{title:"Template Functions",permalink:"/View-Assist/docs/developer-resources/templates"}},l={},o=[{value:"Set Timer",id:"set-timer",level:2},{value:"Service Name",id:"service-name",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Service Response",id:"service-response",level:4},{value:"Cancel Timer",id:"cancel-timer",level:2},{value:"Service Name",id:"service-name-1",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Response",id:"response",level:4},{value:"Snooze Timer",id:"snooze-timer",level:2},{value:"Service Name",id:"service-name-2",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Response",id:"response-1",level:4},{value:"Get Timers",id:"get-timers",level:2},{value:"Service Name",id:"service-name-3",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Response",id:"response-2",level:4},{value:"Events",id:"events",level:2},{value:"Outstanding TODOs",id:"outstanding-todos",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"timers",children:"Timers"}),"\n",(0,s.jsx)(n.p,{children:"The timer functionality is designed to handle timers, alarms, reminders and scheduled commands, managed via voice."}),"\n",(0,s.jsxs)(n.p,{children:["Upon expiration of the timer, an event is fired with the timer details.\nEqually, prior to the expiration of the timer, an expiry warning event is fired to allow for a countdown to expiry.  This is default set at 10 seconds before but can be set in the ",(0,s.jsx)(n.code,{children:"set_timer"})," service on timer creation."]}),"\n",(0,s.jsx)(n.p,{children:"The following services are available"}),"\n",(0,s.jsx)(n.h2,{id:"set-timer",children:"Set Timer"}),"\n",(0,s.jsx)(n.p,{children:"This service creates the timer and provides a response."}),"\n",(0,s.jsx)(n.h4,{id:"service-name",children:"Service Name"}),"\n",(0,s.jsx)(n.p,{children:"view_assist.set_timer"}),"\n",(0,s.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"entity_id"})," (optional but must have this or device_id) - this is the entity id of the VA entity to tie the timer to"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"device_id"})," (optional but must have this or entity_id) - this is the device id of the voice device which was passed in the sentence"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"type"})," (required) - this is the type of timer (alarm, timer, reminder, command)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"name"})," (optional) - a name for the timer"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"time"})," (required) - a time sentence - see below for examples of supported sentences"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"extra"})," (optional) - accepts key/value pairs of any additional data to be stored with the timer and available in the timer info on the va entity attributes and in any timer events."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"service-response",children:"Service Response"}),"\n",(0,s.jsx)(n.p,{children:"Returns the timer data and a sentence that can be used for a conversation response that is the interpretation of the requested time."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'timer_id: 01JN6FGMRGJHXHSP9J7HKWK7VA\ntimer:\n  entity_id: sensor.display_test\n  timer_class: alarm\n  timer_type: TimerInterval\n  name: null\n  expires: "2025-02-28T14:41:37"\n  original_expiry: "2025-02-28T14:41:37"\n  pre_expire_warning: 10\n  expiry:\n    seconds: 600\n    interval:\n      days: 0\n      hours: 0\n      minutes: 10\n      seconds: 0\n    day: Today\n    time: 2:41:37 PM\n    text: 10 minutes\n  created_at: "2025-02-28T14:31:37"\n  updated_at: "2025-02-28T14:31:37"\n  status: running\n  extra_info:\n    sentence: 10 minutes\n    timer_info:\n      days: 0\n      hours: 0\n      minutes: 10\n      seconds: 0\nresponse: 10 minutes\n'})}),"\n",(0,s.jsx)(n.h2,{id:"cancel-timer",children:"Cancel Timer"}),"\n",(0,s.jsx)(n.p,{children:"This service cancels 1 or more timers and provides a response to confirm if timers were cancelled."}),"\n",(0,s.jsx)(n.h4,{id:"service-name-1",children:"Service Name"}),"\n",(0,s.jsx)(n.p,{children:"view_assist.cancel_timer"}),"\n",(0,s.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"timer_id"})," (optional) - this is the id of the individual timer you wish to cancel"]}),"\n",(0,s.jsx)(n.li,{children:"`entity_id  (optional) - the entity id of the VA sensor that the timers are attached to.  This will cancel all the timers for that VA entity"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"device_id"})," (optional) - this is the device id of the voice device which was passed in when the timer was created.  This will cancel all timers for that device id."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"remove_all"})," (optional) - this will delete all timers"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"response",children:"Response"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:"result: true\n"})}),"\n",(0,s.jsx)(n.h2,{id:"snooze-timer",children:"Snooze Timer"}),"\n",(0,s.jsx)(n.p,{children:"This service snoozes an expired timer and reschedules it to fire again later.  It returns the updated timer if successful with the snooze information in the extra_info key."}),"\n",(0,s.jsx)(n.h4,{id:"service-name-2",children:"Service Name"}),"\n",(0,s.jsx)(n.p,{children:"view_assist.snooze_timer"}),"\n",(0,s.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"timer_id"})," (required) - this is the id of the individual timer you wish to cancel"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"time"})," (required) - a time sentence - see below for examples of supported sentences"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"response-1",children:"Response"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'timer_id: 01JMWMYR7YQ1GVTT2TYBQM21Q6\ntimer:\n  entity_id: sensor.display_test\n  timer_class: timer\n  timer_type: TimerInterval\n  name: ""\n  expires: "2025-02-24T19:04:57"\n  original_expiry: "2025-02-24T18:54:28"\n  pre_expire_warning: 10\n  expiry:\n    seconds: 600\n    interval:\n      days: 0\n      hours: 0\n      minutes: 10\n      seconds: 0\n    text: 10 minutes\n  created_at: "2025-02-24T18:54:18"\n  updated_at: "2025-02-24T18:54:57"\n  status: snoozed\n  extra_info:\n    sentence: 10 seconds\n    timer_info:\n      days: 0\n      hours: 0\n      minutes: 0\n      seconds: 10\n    view_assist_entity_id: sensor.display_test\n    snooze_duration:\n      days: 0\n      hours: 0\n      minutes: 10\n      seconds: 0\nresponse: 10 minutes\n\n'})}),"\n",(0,s.jsx)(n.h2,{id:"get-timers",children:"Get Timers"}),"\n",(0,s.jsx)(n.p,{children:"This service retrieves a list of timers.  With no parameters it will return all active timers"}),"\n",(0,s.jsx)(n.h4,{id:"service-name-3",children:"Service Name"}),"\n",(0,s.jsx)(n.p,{children:"view_assist.get_timers"}),"\n",(0,s.jsx)(n.h4,{id:"parameters-3",children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"timer_id"})," (optional) - this is the id of the individual timer you wish to view"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"entity_id"})," (optional) - the entity id of the VA device.  This will return all timers for that VA device."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"device_id"})," (optional) - this is the device id of the voice device which was passed in when the timer was created.  This will return all timers for that device id."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"name"})," (optional) - the name of the timer.  This can be provided with an entity/device id or on its own.  If a timer id is supplied, it has no effect."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"include_expired"})," (optional) - this will include/exclude expired timers"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"response-2",children:"Response"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'result:\n  - id: 01JMWK41PTEZ2JFKD9FSFERHRR\n    entity_id: display.test\n    timer_class: reminder\n    timer_type: TimerTime\n    name: do the chores\n    expires: "2025-02-25T14:30:00"\n    original_expiry: "2025-02-25T14:30:00"\n    pre_expire_warning: 10\n    expiry:\n      seconds: 70612\n      interval:\n        days: 0\n        hours: 19\n        minutes: 36\n        seconds: 52\n      text: tomorrow at 2:30 PM\n    created_at: "2025-02-24T18:22:14"\n    updated_at: "2025-02-24T18:22:14"\n    status: running\n    extra_info:\n      sentence: 14:30 tomorrow\n      timer_info:\n        day: tomorrow\n        hour: 14\n        minute: 30\n        second: 0\n        meridiem: ""\n      view_assist_entity_id: sensor.display_test\n  - id: 01JMWKVP7PXDZ38MD6CV62NYW3\n    entity_id: display.test\n    timer_class: alarm\n    timer_type: TimerTime\n    name: ""\n    expires: "2025-02-25T23:30:00"\n    original_expiry: "2025-02-25T23:30:00"\n    pre_expire_warning: 10\n    expiry:\n      seconds: 103012\n      interval:\n        days: 1\n        hours: 4\n        minutes: 36\n        seconds: 52\n      text: tomorrow at 11:30 PM\n    created_at: "2025-02-24T18:35:09"\n    updated_at: "2025-02-24T18:35:09"\n    status: running\n    extra_info:\n      sentence: 11:30 pm on tuesday\n      timer_info:\n        day: tuesday\n        hour: 11\n        minute: 30\n        second: 0\n        meridiem: pm\n      view_assist_entity_id: sensor.display_test\n\n'})}),"\n",(0,s.jsx)(n.h2,{id:"events",children:"Events"}),"\n",(0,s.jsx)(n.p,{children:"The timer will raise an event for the following statuses:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Timer Started"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Timer Cancelled"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Timer Warning"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Timer Expired"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Timer Snoozed"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"All event names are:"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"va_timer_[action]"})," - for alarms, timers, reminders"]}),"\n",(0,s.jsx)(n.p,{children:"or"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"va_timer_command_[action]"})," - for command timers"]}),"\n",(0,s.jsx)(n.p,{children:"where [action] is one of started, cancelled, warning, expired, snoozed"}),"\n",(0,s.jsx)(n.h2,{id:"outstanding-todos",children:"Outstanding TODOs"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Create an expired timer clean up routine - they are currently only deleted by timer_cancel and restart of HA"}),"\n",(0,s.jsx)(n.li,{children:"Allow setting of timer expiry warning event when setting timer"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>a});var s=i(6540);const t={},r=s.createContext(t);function d(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);